---
import { cn } from '@/utils/utils'
import Container from './Container.astro'
import { navLinks } from '@/lib/site'

const pathName = Astro.url.pathname.split('/')[1]
---

<nav>
  <Container>
    <div
      class="text-muted-foreground relative mt-2 flex items-center justify-between">
      <a
        href="/"
        class="font-cursive hover:bg-primary-foreground hover:text-foreground rounded-full border bg-white px-2 py-1 transition-colors duration-300 sm:text-2xl">
        CN
      </a>

      <ul
        class="font-cursive absolute right-0 flex list-none gap-4 text-2xl opacity-0 transition-all duration-100 ease-in sm:text-3xl md:opacity-100"
        aria-label="Desktop navigation">
        {
          navLinks.map(({ href, text }) => {
            const isActive = text === pathName
            return (
              <li>
                <a
                  href={href}
                  class={cn(
                    'group hover:text-foreground relative transition-colors duration-200 ease-in-out',
                    isActive ? 'text-foreground' : 'text-muted-foreground'
                  )}
                  aria-current={isActive ? 'page' : undefined}>
                  {text}
                </a>
              </li>
            )
          })
        }
      </ul>

      <button
        class="hamburger opacity-100 transition-all ease-in-out focus:outline-none md:opacity-0 md:-z-20"
        id="menu-btn"
        aria-label="Toggle mobile menu"
        aria-expanded="false">
        <span class="hamburger-top"></span>
        <span class="hamburger-middle"></span>
        <span class="hamburger-bottom"></span>
      </button>
    </div>
  </Container>
</nav>

<script>
  import { isOpen } from '@/store'

  const setupNav = () => {
    const menuBtn = document.querySelector<HTMLButtonElement>('#menu-btn')
    if (!menuBtn) return

    const toggleMenu = () => {
      const newState = !isOpen.get()
      isOpen.set(newState)
      menuBtn.setAttribute('aria-expanded', String(newState))
    }

    menuBtn.addEventListener('click', toggleMenu)
    return () => menuBtn.removeEventListener('click', toggleMenu)
  }

  let cleanup = setupNav()

  document.addEventListener('astro:after-swap', () => {
    cleanup?.()
    cleanup = setupNav()
  })
</script>

<style>
  .hamburger {
    --hamburger-width: 24px;
    --hamburger-height: 24px;
    --bar-height: 2px;
    --bar-spacing: 7px;

    cursor: pointer;
    width: var(--hamburger-width);
    height: var(--hamburger-height);
    transition: all 0.25s;
    position: relative;
  }

  .hamburger-top,
  .hamburger-middle,
  .hamburger-bottom {
    position: absolute;
    top: 0;
    left: 0;
    width: var(--hamburger-width);
    height: var(--bar-height);
    background: black;
    transform: rotate(0);
    transition: all 0.5s;
  }

  .hamburger-middle {
    transform: translateY(var(--bar-spacing));
  }

  .hamburger-bottom {
    transform: translateY(calc(var(--bar-spacing) * 2));
  }
</style>
