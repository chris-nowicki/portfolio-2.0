---
import Container from '@/components/Container.astro'
import ContentSection from '@/components/ContentSection.astro'
import PageLayout from '@/layouts/PageLayout.astro'
import { SPEAKING } from '@/lib/site'
import { getSortedYears, groupEntriesByYear } from '@/utils/collection-dates'
import generateOgImageUrl from '@/utils/og-image'
import { getCollection, type CollectionEntry } from 'astro:content'

const data = (await getCollection('speaking')).sort(
  (a, b) => new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf()
)

type Speaking = Record<string, CollectionEntry<'speaking'>[]>
const speaking: Speaking = groupEntriesByYear<'speaking'>(data)

const years = getSortedYears(speaking)

const ogImageUrl = generateOgImageUrl({
  header: `/${SPEAKING.TITLE.toUpperCase()}`,
  description: SPEAKING.DESCRIPTION,
})
---

<PageLayout
  title={SPEAKING.TITLE}
  description={SPEAKING.DESCRIPTION}
  image={ogImageUrl}>
  <Container>
    <section class="pt-28 text-sm sm:pt-40 sm:text-base">
      <header>
        <h1 class="text-xl font-bold sm:text-4xl">Speaking</h1>
      </header>

      <div>
        {
          years.map((year) => (
            <ContentSection
              title={year}
              items={speaking[year].map((engagement) => ({
                href: engagement.data.videoUrl,
                name: engagement.data.title,
                description: engagement.data.description,
                external: true,
              }))}
            />
          ))
        }
      </div>
    </section>
  </Container>
</PageLayout>
